name: Test, build and upload
on: push
env:
    CI: true
    TZ: Europe/Amsterdam

jobs:
    test:
        name: Run tests
        runs-on: ubuntu-latest
        if: github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/master'
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup node
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Run tests
              run: npm run test

    update-gh-pages:
        name: Update GitHub pages
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/dev'
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup node
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Build mock application
              run: npm run build:mock
            - name: Update GitHub pages
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./build

    deploy-dev:
        name: Deploy application to dev
        if: github.ref == 'refs/heads/dev'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup node
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci
            - name: Run tests
              run: npm run test
            - name: Build application
              run: npm run build
              env:
                  PUBLIC_URL: https://veilarbvisittkortfs.dev.intern.nav.no
            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v0
              with:
                  credentials_json: ${{ secrets.GCS_SA_KEY_DEV }}
            - name: Setup gcloud
              uses: google-github-actions/setup-gcloud@v0
            - name: Upload files to GCS
              run: gsutil -m rsync -r build gs://veilarbvisittkortfs-dev
            - name: Create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: release/dev@${{ github.sha }}
                  release_name: Release to dev
                  prerelease: true

    deploy-prod:
        name: Deploy application to prod
        if: github.ref == 'refs/heads/master'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Setup node
              uses: actions/setup-node@v2
              with:
                  node-version: '16'
                  cache: 'npm'
            - name: Install dependencies
              run: npm ci --legacy-peer-deps
            - name: Run tests
              run: npm run test
            - name: Build application
              run: npm run build
              env:
                  PUBLIC_URL: https://veilarbvisittkortfs.intern.nav.no
            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v0
              with:
                  credentials_json: ${{ secrets.GCS_SA_KEY_PROD }}
            - name: Setup gcloud
              uses: google-github-actions/setup-gcloud@v0
            - name: Upload files to GCS
              run: gsutil -m rsync -r build gs://veilarbvisittkortfs-prod
            - name: Create release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: release/prod@${{ github.sha }}
                  release_name: Release to prod
                  prerelease: false
